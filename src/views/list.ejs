<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>CryptoFS</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
  </head>
  <body>
    <%- include partials/nav %>
    <style>
      table {
        border-collapse: collapse;
      }

      table,
      th,
      td {
        border: 1px solid black;
      }
    </style>
    <% if(message) {%>
    <p style="color: red;"><%= message %></p>
    <% } %>
    <table id="table1">
      <tr>
        <td>
          Filename
        </td>
        <td>Date Uploaded</td>
        <td>
          Hash
        </td>
        <td>
          Action
        </td>
      </tr>
      <% map.forEach(function(obj, i){ %>
      <tr>
        <td><%= obj.metaData.name %></td>
        <td><%= obj.metaData.size %></td>
        <td><%= obj.metaData.dateUploaded %></td>
        <td><%= obj.fileContentHash %></td>
        <td>
          <a
            class="button"
            href="/download?hash=<%= file.hash %>"
            target="_blank"
            >Download</a
          >
        </td>
      </tr>
      <% }); %>
    </table>

    <form action="/download" method="POST" name="fileDownload">
      <input type="text" name="fileContentHash" id="fileContentHash" hidden />
      <input type="text" name="msg" id="msg" hidden />
      <input type="text" name="signature" id="signature" hidden />
      <input type="text" name="publicKey" id="publicKey" hidden />
    </form>
  </body>
  <script src="https://unpkg.com/node-forge@0.7.6/dist/forge.min.js"></script>
  <script src="http://code.jquery.com/jquery-1.8.3.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.min.js"></script>
  <script>
    $(document).ready(function () {
      var ed25519 = forge.pki.ed25519;

      var keypair = {
        publicKey: localStorage.pubkey,
        privateKey: localStorage.privkey,
      };
      console.log(keypair);

      if (!keypair.privateKey && !keypair.publicKey) {
        keypair = ed25519.generateKeyPair();
        //console.log(keypair);
        localStorage.setItem("pubkey", keypair.publicKey);
        localStorage.setItem("privkey", keypair.privateKey);
      } else {
        keypair.publicKey = new Uint8Array(keypair.publicKey.split(","));
        keypair.privateKey = new Uint8Array(keypair.privateKey.split(","));
      }
      var signature = ed25519.sign({
        message: "test",
        encoding: "utf8",
        privateKey: keypair.privateKey,
      });
      //console.log(signature);

      $.ajax({
        type: "GET",
        url: "/listFiles",
        headers: {
          msg: "test",
          signature: signature,
          publickey: keypair.publicKey,
        },
        contentType: "application/json;charset=utf-8",
        success: function (response) {
          console.log(response);
          var table = document.getElementById("table1");
          response.map.forEach(function (element, index) {
            var tr = document.createElement("tr");
            var td1 = document.createElement("td");
            td1.innerHTML = element.metaData.filename;
            var td2 = document.createElement("td");
            td2.innerHTML = element.metaData.dateUploaded;
            var td3 = document.createElement("td");
            td3.innerHTML = element.fileContentHash;
            var td4 = document.createElement("td");
            var button = document.createElement("button");
            button.setAttribute(
              "onclick",
              "downloadFile('" + element.fileContentHash + "')"
            );
            button.innerHTML = "Download";
            td4.appendChild(button);
            tr.appendChild(td1);
            tr.appendChild(td2);
            tr.appendChild(td3);
            tr.appendChild(td4);
            table.appendChild(tr);
          });
        },
        error: function (response) {
          console.log(response);
        },
      });
    });
  </script>
  <script>
    function downloadFile(fileContentHash) {
      var ed25519 = forge.pki.ed25519;

      var keypair = {
        publicKey: localStorage.pubkey,
        privateKey: localStorage.privkey,
      };
      console.log(keypair);

      if (!keypair.privateKey && !keypair.publicKey) {
        keypair = ed25519.generateKeyPair();
        //console.log(keypair);
        localStorage.setItem("pubkey", keypair.publicKey);
        localStorage.setItem("privkey", keypair.privateKey);
      } else {
        keypair.publicKey = new Uint8Array(keypair.publicKey.split(","));
        keypair.privateKey = new Uint8Array(keypair.privateKey.split(","));
      }
      var signature = ed25519.sign({
        message: "test",
        encoding: "utf8",
        privateKey: keypair.privateKey,
      });

      $('input[name="fileContentHash"]').val(fileContentHash);
      $('input[name="msg"]').val("test");
      $('input[name="signature"]').val(signature.toString());
      $('input[name="publicKey"]').val(keypair.publicKey.toString());
      document.forms["fileDownload"].submit();
    }
  </script>
</html>
